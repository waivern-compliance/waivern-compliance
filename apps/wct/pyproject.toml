[project]
name = "waivern-compliance-tool"
version = "0.1.0"
description = "Waivern Compliance Tool - a wrapper application that executes runbooks"
requires-python = ">=3.12"
dependencies = [
    "waivern-core",
    "waivern-llm",
    "waivern-connectors-database",
    "waivern-mysql",
    "waivern-community[all]",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "typer>=0.16.0",
]

[project.scripts]
wct = "wct.__main__:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/wct"]

[dependency-groups]
dev = [
    "basedpyright>=1.29.2",
    "ruff>=0.11.12",
]

[tool.ruff]
target-version = "py312"
src = ["src"]

[tool.basedpyright]
typeCheckingMode = "strict"
reportImplicitOverride = "error"

# Relax type inference rules for tests while still catching real type errors
[[tool.basedpyright.executionEnvironments]]
root = "tests"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportUnknownParameterType = "none"
reportUnknownMemberType = "none"
reportMissingParameterType = "none"
reportUnknownLambdaType = "none"

[tool.ruff.lint]
select = [
    "ANN",    # flake8-annotations
    "B",      # flake8-bugbear
    "D",      # pydocstyle
    "F",      # pyflakes
    "I",      # isort
    "PL",     # pylint
    "RUF100", # unused-noqa-directive
    "S",      # bandit
    "UP",     # pyupgrade
]
ignore = [
    "D203",    # incorrect-blank-line-before-class (conflicts with D211)
    "D213",    # multi-line-summary-second-line (conflicts with D212)
]

[tool.ruff.lint.pydocstyle]
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN", # Type annotations - not required in tests
    "B", # flake8-bugbear - less strict in tests
    "D", # Documentation
    "S101", # Use of assert detected
    "PLC0415", # Import outside top-level - acceptable for checking optional dependencies
    "PLR2004", # Magic value used in comparison - acceptable in tests
]
"src/wct/executor.py" = [
    "PLR0913", # Too many arguments - executor methods need multiple parameters for orchestration
]

"""Known processing purposes to search for during analysis."""

from typing import Any, Final

from typing_extensions import override

from wct.rulesets.base import Ruleset

PROCESSING_PURPOSES: Final = {
    "Artificial Intelligence Model Training": {
        "patterns": [
            "model training",
            "machine learning",
            "ai training",
            "training data",
            "ml model",
            "learning model",
            "predictive model",
            "google vertex ai",
            "aws sagemaker",
            "microsoft azure machine learning",
            "ibm watson machine learning",
            "datarobot",
            "tensorflow extended",
            "hugging face transformers",
            "hopsworks",
            "snorkel ai",
            "kubeflow",
            "feast",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "EU_AI_ACT", "NIST_AI_RMF"],
    },
    "Artificial Intelligence Bias Testing": {
        "patterns": [
            "bias testing",
            "fairness testing",
            "model bias",
            "ai fairness",
            "bias detection",
            "fairness metrics",
            "ibm ai fairness 360",
            "microsoft fairlearn",
            "themis-ml",
            "shap",
            "lime",
            "uchicago aequitas",
            "google what-if tool",
            "responsibly",
            "rebias",
            "fiddler ai",
            "arthur ai",
            "truera",
            "credo ai",
            "aws sagemaker clarify",
            "parity ai",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "EU_AI_ACT", "NIST_AI_RMF"],
    },
    "Artificial Intelligence Model Refinement": {
        "patterns": [
            "model refinement",
            "model improvement",
            "fine-tuning",
            "model optimisation",
            "performance enhancement",
            "finetunedb",
            "entry point ai",
            "openai api",
            "google ai platform vizier",
            "aws sagemaker",
            "nvidia rtx ai toolkit",
            "lmflow",
            "optuna",
            "hyperopt",
            "mlflow",
            "deepchecks",
            "granica signal",
            "superannotate",
            "kili technology",
            "cohere",
            "scale ai",
            "labelbox",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "medium",
        "compliance_relevance": ["GDPR", "EU_AI_ACT", "NIST_AI_RMF"],
    },
    "Artificial Intelligence Performance Testing": {
        "patterns": [
            "performance testing",
            "model evaluation",
            "accuracy testing",
            "robustness testing",
            "efficiency testing",
            "deepchecks",
            "aitest",
            "mlperf",
            "hpc ai500",
            "aiperf",
            "mlcommons",
            "ailuminate",
            "chatbot arena",
            "helm",
            "big-bench",
            "decoding trust benchmark",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "medium",
        "compliance_relevance": ["GDPR", "EU_AI_ACT", "NIST_AI_RMF"],
    },
    "Artificial Intelligence Security Testing": {
        "patterns": [
            "security testing",
            "penetration testing",
            "adversarial testing",
            "model security",
            "vulnerability testing",
            "ibm adversarial robustness toolbox",
            "microsoft counterfit",
            "garak",
            "privacy meter",
            "ai-exploits",
            "pentest ai",
            "hcl app scan",
            "purple llama",
            "aptori",
            "ai jack",
            "pentest gpt",
            "devaic",
            "darktrace",
            "synack",
            "shellgpt",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "low",
        "compliance_relevance": [
            "GDPR",
            "EU_AI_ACT",
            "NIST_AI_RMF",
            "ISO_27001",
            "SOC_2",
        ],
    },
    "Artificial Intelligence Compliance Management": {
        "patterns": [
            "compliance",
            "risk management",
            "governance",
            "regulatory compliance",
            "ethics",
            "accountability",
            "centraleyes",
            "compliance.ai",
            "ibm watson",
            "auditboard",
            "trustlayer",
            "robust intelligence",
            "fairnow",
            "logicgate",
            "validmind",
            "credo.ai",
            "saidot",
            "holisticai",
            "onetrust",
            "fairly.ai",
            "anch.ai",
            "fiddler ai",
        ],
        "purpose_category": "AI_AND_ML",
        "risk_level": "low",
        "compliance_relevance": ["GDPR", "EU_AI_ACT", "NIST_AI_RMF"],
    },
    "General Product and Service Delivery": {
        "patterns": [
            "service",
            "delivery",
            "product",
            "fulfill",
            "provide",
            "technical operations",
            "online services",
            "aws",
            "google cloud",
            "microsoft azure",
            "apache web server",
            "shopify",
            "webflow",
            "wordpress",
        ],
        "purpose_category": "OPERATIONAL",
        "risk_level": "low",
        "compliance_relevance": ["GDPR"],
    },
    "Customer Service and Support": {
        "patterns": [
            "support",
            "customer",
            "help",
            "chat",
            "email",
            "inquiry",
            "ticket",
            "assistance",
            "zendesk",
            "freshdesk",
            "intercom",
            "salesforce servicecloud",
            "helpscout",
            "liveagent",
        ],
        "purpose_category": "OPERATIONAL",
        "risk_level": "low",
        "compliance_relevance": ["GDPR"],
    },
    "Customization of Products and Services": {
        "patterns": [
            "customisation",
            "preferences",
            "settings",
            "user choice",
            "theme",
            "ui",
            "personalization",
        ],
        "purpose_category": "OPERATIONAL",
        "risk_level": "low",
        "compliance_relevance": ["GDPR"],
    },
    "User Identity and Login Management": {
        "patterns": [
            "authentication",
            "login",
            "account",
            "profile",
            "credentials",
            "password",
            "user id",
            "ssn",
            "google identity",
            "facebook login",
            "apple sign-in",
            "okta",
            "microsoft active directory",
            "forgerock",
        ],
        "purpose_category": "OPERATIONAL",
        "risk_level": "medium",
        "compliance_relevance": ["GDPR"],
    },
    "Payment, Billing, and Invoicing": {
        "patterns": [
            "payment",
            "transaction",
            "billing",
            "purchase",
            "subscription",
            "order",
            "financial",
            "stripe",
            "paypal",
            "adyen",
            "square",
            "braintree",
            "worldpay",
            "klarna",
            "recurly",
        ],
        "purpose_category": "OPERATIONAL",
        "risk_level": "medium",
        "compliance_relevance": ["GDPR", "PCI_DSS", "SOX"],
    },
    "Behavioral Data Analysis for Product Improvement": {
        "patterns": [
            "analytics",
            "tracking",
            "monitor",
            "measure",
            "behavior",
            "survey",
            "product improvement",
            "adobe analytics",
            "snowflake",
            "hotjar",
            "piwik pro",
            "matomo",
            "heap",
            "fullstory",
        ],
        "purpose_category": "ANALYTICS",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "CCPA", "CPRA"],
    },
    "Dynamic Personalization of Products and Services": {
        "patterns": [
            "personalization",
            "recommendation",
            "history",
            "mirror audience",
            "preferences",
            "targeting",
            "braze",
            "twilio",
            "optimizely",
            "dynamic yield",
            "adobe target",
            "coveo relevance cloud",
        ],
        "purpose_category": "MARKETING_AND_ADVERTISING",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "CCPA", "CPRA"],
    },
    "Consumer Marketing Within Owned Products": {
        "patterns": [
            "marketing",
            "promotion",
            "advertising",
            "notification",
            "email campaign",
            "loyalty program",
            "braze",
            "sap emarsys",
            "salesforce marketing cloud",
            "klaviyo",
            "omnisend",
            "mailchimp",
            "sendgrid",
            "mailjet",
            "onesignal",
        ],
        "purpose_category": "MARKETING_AND_ADVERTISING",
        "risk_level": "medium",
        "compliance_relevance": ["GDPR", "CCPA", "CPRA"],
    },
    "Targeted Marketing via Third-Party Platforms": {
        "patterns": [
            "advertising",
            "targeting",
            "third-party marketing",
            "tracking",
            "custom audience",
            "retargeting",
            "meta",
            "snap",
            "google ads 360",
            "tiktok",
            "twitter",
            "linkedin ads",
        ],
        "purpose_category": "MARKETING_AND_ADVERTISING",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "CCPA", "CPRA"],
    },
    "Third-Party Marketing via Owned Products": {
        "patterns": [
            "partner marketing",
            "third-party advertising",
            "sponsored content",
            "custom audience",
            "meta",
            "snap",
            "google ads 360",
            "tiktok",
            "third-party advertisers",
        ],
        "purpose_category": "MARKETING_AND_ADVERTISING",
        "risk_level": "high",
        "compliance_relevance": ["GDPR", "CCPA", "CPRA"],
    },
    "Security, Fraud Prevention, and Abuse Detection": {
        "patterns": [
            "security",
            "fraud",
            "protection",
            "abuse",
            "compliance",
            "policy enforcement",
            "verification",
            "scamalytics",
            "seon",
            "netcraft",
            "threatmark",
            "complyadvantage",
            "veriff",
            "feedzai",
        ],
        "purpose_category": "SECURITY",
        "risk_level": "low",
        "compliance_relevance": ["GDPR", "ISO_27001", "SOC_2"],
    },
}


class ProcessingPurposesRuleset(Ruleset):
    """Class-based processing purposes detection ruleset with logging support.

    This class provides structured access to processing purposes patterns
    with built-in logging capabilities for debugging and monitoring.

    Processing purposes help identify what business activities or data uses
    are mentioned in content, which is crucial for privacy compliance,
    consent management, and understanding data processing activities.
    """

    def __init__(self, ruleset_name: str = "processing_purposes") -> None:
        """Initialize the processing purposes ruleset.

        Args:
            ruleset_name: Name of the ruleset for logging purposes
        """
        super().__init__(ruleset_name)
        self.logger.debug(f"Initialized {self.__class__.__name__} ruleset")

    @override
    def get_patterns(self) -> dict[str, Any]:
        """Get the processing purposes patterns.

        Returns:
            Dictionary containing all processing purpose patterns with metadata
        """
        self.logger.debug(
            f"Returning {len(PROCESSING_PURPOSES)} processing purpose pattern categories"
        )
        return PROCESSING_PURPOSES
